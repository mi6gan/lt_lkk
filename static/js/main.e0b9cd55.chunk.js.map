{"version":3,"sources":["ContractList.js","index.js","App.js"],"names":["ContractList","props","List","Datagrid","TextField","source","DateField","ReactDOM","render","token","process","uri","React","dataProvider","setDataProvider","onDataProvider","provider","buildGraphQLProvider","clientOptions","headers","authorization","then","Admin","Resource","name","list","document","getElementById"],"mappings":"mPAIe,SAASA,EAAaC,GACnC,OACE,gBAACC,EAAA,EAASD,EACR,gBAACE,EAAA,EAAD,KACE,gBAACC,EAAA,EAAD,CAAWC,OAAQ,SACnB,gBAACC,EAAA,EAAD,CAAWD,OAAQ,WCJ3BE,IAASC,OAAO,iBCOD,YAGQ,IAAD,IAFpBC,aAEoB,MAFZC,uJAEY,MADpBC,WACoB,MADdD,gDACc,IACoBE,WAAe,MADnC,mBACbC,EADa,KACCC,EADD,KAEdC,EAAiBH,eACrB,SAACI,GAAD,OAAcF,GAAgB,kBAAME,OACpC,IAkBF,OAhBAJ,aACE,WACuB,OAAjBC,GACFI,YAAqB,CACnBC,cAAe,CACbP,MACAQ,QAAS,CACPC,cAAeX,EAAK,iBAAaA,GAAU,OAG9CY,KAAKN,KAGZ,CAACF,EAAcE,EAAgBN,EAAOE,IAGjCE,EACL,gBAACS,EAAA,EAAD,CAAOT,aAAcA,GACnB,gBAACU,EAAA,EAAD,CAAUC,KAAK,WAAWC,KAAMzB,KAEhC,ODpCU,MAAS0B,SAASC,eAAe,W","file":"static/js/main.e0b9cd55.chunk.js","sourcesContent":["// @flow\nimport * as React from 'react';\nimport { List, Datagrid, DateField, TextField } from 'react-admin';\n\nexport default function ContractList(props) {\n  return (\n    <List {...props}>\n      <Datagrid>\n        <TextField source={'name'} />\n        <DateField source={'date'} />\n      </Datagrid>\n    </List>\n  );\n}\n","// @flow\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// @flow\nimport * as React from 'react';\nimport { Admin, Resource } from 'react-admin';\nimport buildGraphQLProvider from 'ra-data-graphql-simple';\n\nimport ContractList from './ContractList';\n\ntype Props = {\n  token?: string,\n  uri?: string,\n};\n\nexport default function App({\n  token = process.env.REACT_APP_TOKEN,\n  uri = process.env.REACT_APP_URI,\n}: Props): React.Node {\n  const [dataProvider, setDataProvider] = React.useState(null);\n  const onDataProvider = React.useCallback(\n    (provider) => setDataProvider(() => provider),\n    []\n  );\n  React.useEffect(\n    () => {\n      if (dataProvider === null) {\n        buildGraphQLProvider({\n          clientOptions: {\n            uri,\n            headers: {\n              authorization: token ? `Bearer ${token}` : '',\n            },\n          },\n        }).then(onDataProvider);\n      }\n    },\n    [dataProvider, onDataProvider, token, uri]\n  );\n\n  return dataProvider ? (\n    <Admin dataProvider={dataProvider}>\n      <Resource name=\"Contract\" list={ContractList} />\n    </Admin>\n  ) : null;\n}\n"],"sourceRoot":""}